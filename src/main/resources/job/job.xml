<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

    <import resource="job-context.xml" />
    <bean id="cadre" class="po.Cadre"></bean>
    <bean id="cadreJobListener" class="batch.CadreJobListener"></bean>

    <batch:job id="cadreJob">
        <batch:step id="cadreStep">
            <batch:tasklet transaction-manager="transactionManager" allow-start-if-complete="true">
                <batch:chunk reader="cadreReader" writer="cadreWriter" processor="cadreProcess" commit-interval="2">
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
        <batch:listeners>
            <batch:listener ref="cadreJobListener"></batch:listener>
        </batch:listeners>
    </batch:job>


    <bean id="cadreReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="resource" value="classpath:job/mingdan.txt"></property>
        <!--<property name="resource" value="#{jobParameters['inputSource']}"></property>-->
        <property name="lineMapper" ref="lineMapper">
        </property>
    </bean>

    <bean id="lineMapper" class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
        <property name="lineTokenizer" ref="cadreLineTokenizer"></property>
        <property name="fieldSetMapper">
            <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                <property name="prototypeBeanName" value="cadre"></property>
            </bean>
        </property>
    </bean>

    <bean id="cadreLineTokenizer"
          class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <property name="delimiter" value=","></property>
        <property name="names">
            <list>
                <value>name</value>
                <value>company</value>
                <value>office</value>
                <value>date</value>
            </list>
        </property>
    </bean>


    <bean id="cadreProcess" scope="step"
          class="batch.CadreProcessor">
    </bean>

    <bean id="cadreWriter" class="batch.CadreWriter"></bean>
    <!--<bean id="cadreWriter"-->
          <!--class="org.springframework.batch.item.file.FlatFileItemWriter"-->
          <!--scope="step">-->
        <!--<property name="resource" value="classpath:job/target.txt"></property>-->
        <!--<property name="lineAggregator">-->
            <!--<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">-->
                <!--<property name="delimiter" value=","></property>-->
                <!--<property name="fieldExtractor">-->
                    <!--<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">-->
                        <!--<property name="names">-->
                            <!--<list>-->
                                <!--<value>date</value>-->
                                <!--<value>name</value>-->
                                <!--<value>company</value>-->
                                <!--<value>office</value>-->
                            <!--</list>-->
                        <!--</property>-->
                    <!--</bean>-->
                <!--</property>-->
            <!--</bean>-->
        <!--</property>-->
    <!--</bean>-->

</beans>
